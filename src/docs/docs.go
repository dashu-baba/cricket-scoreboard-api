// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://github.com/dashu-baba/cricket-scoreboard-api",
        "contact": {},
        "license": {
            "name": "MIT",
            "url": "https://github.com/dashu-baba/cricket-scoreboard-api/blob/master/LICENSE"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/teams": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get list of teams",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responsemodels.Team"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a team item",
                "parameters": [
                    {
                        "description": "Create Team",
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestmodels.TeamCreateModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responsemodels.Team"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responsemodels.ErrorModel"
                        }
                    }
                }
            }
        },
        "/teams/:id": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get singe item of team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responsemodels.Team"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a team item",
                "parameters": [
                    {
                        "description": "Update Team",
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestmodels.TeamUpdateModel"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Team ID",
                        "name": "string",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responsemodels.ErrorModel"
                        }
                    }
                }
            }
        },
        "/teams/:id/players": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Add a player to the team item",
                "parameters": [
                    {
                        "description": "Add Team",
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestmodels.PlayerCreateModel"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Team ID",
                        "name": "string",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responsemodels.Player"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responsemodels.ErrorModel"
                        }
                    }
                }
            }
        },
        "/teams/:id/players/:playerid": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a player item",
                "parameters": [
                    {
                        "description": "Update Team",
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestmodels.PlayerUpdateModel"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Player ID",
                        "name": "playerid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responsemodels.ErrorModel"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Remove a player from the team item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Player ID",
                        "name": "playerid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {}
                }
            }
        }
    },
    "definitions": {
        "requestmodels.PlayerCreateModel": {
            "type": "object",
            "required": [
                "name",
                "playerType"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "playerType": {
                    "type": "integer"
                }
            }
        },
        "requestmodels.PlayerModel": {
            "type": "object",
            "required": [
                "name",
                "playerType"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "playerType": {
                    "type": "integer"
                }
            }
        },
        "requestmodels.PlayerUpdateModel": {
            "type": "object",
            "required": [
                "name",
                "playerType"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "playerType": {
                    "type": "integer"
                }
            }
        },
        "requestmodels.TeamCreateModel": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "logo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "players": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/requestmodels.PlayerModel"
                    }
                }
            }
        },
        "requestmodels.TeamUpdateModel": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "responsemodels.ErrorModel": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "responsemodels.Player": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "playerType": {
                    "type": "integer"
                },
                "teamID": {
                    "type": "string"
                }
            }
        },
        "responsemodels.Team": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "players": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responsemodels.Player"
                    }
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{ 
	Version:     "1.0",
 	Host:        "",
	BasePath:    "",
	Schemes:     []string{  },
	Title:       "Cricket Scoreboard API",
	Description: "This contains the commn REST api to support a modern cricket scoreboard project.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
