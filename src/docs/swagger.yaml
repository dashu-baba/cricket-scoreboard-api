definitions:
  gin.H:
    additionalProperties: true
    type: object
  requestmodels.CreateInningsModel:
    properties:
      battingTeamId:
        type: string
      bowlingTeamId:
        type: string
      tossWinningTeamId:
        type: string
    required:
    - battingTeamId
    - bowlingTeamId
    - tossWinningTeamId
    type: object
  requestmodels.Match:
    properties:
      matchType:
        type: integer
      overLimit:
        type: integer
      participants:
        items:
          type: string
        type: array
    required:
    - matchType
    - overLimit
    - participants
    type: object
  requestmodels.MatchCreateModel:
    properties:
      matches:
        items:
          $ref: '#/definitions/requestmodels.Match'
        type: array
    required:
    - matches
    type: object
  requestmodels.MatchPlayingSquadModel:
    properties:
      extras:
        items:
          type: string
        type: array
      players:
        items:
          type: string
        type: array
      teamId:
        type: string
    required:
    - teamId
    type: object
  requestmodels.PlayerCreateModel:
    properties:
      name:
        type: string
      playerType:
        type: integer
    required:
    - name
    - playerType
    type: object
  requestmodels.PlayerModel:
    properties:
      name:
        type: string
      playerType:
        type: integer
    required:
    - name
    - playerType
    type: object
  requestmodels.PlayerUpdateModel:
    properties:
      name:
        type: string
      playerType:
        type: integer
    required:
    - name
    - playerType
    type: object
  requestmodels.SeriesCreateModel:
    properties:
      gameType:
        type: integer
      name:
        type: string
      teams:
        items:
          $ref: '#/definitions/requestmodels.SeriesParticipantModel'
        type: array
    required:
    - gameType
    - name
    - teams
    type: object
  requestmodels.SeriesParticipantModel:
    properties:
      squadPlayers:
        items:
          type: string
        type: array
      teamId:
        type: string
    required:
    - squadPlayers
    - teamId
    type: object
  requestmodels.StartInningsModel:
    properties:
      bowlerID:
        type: string
      nonStrikeBatsmanId:
        type: string
      strikeBatsmanId:
        type: string
    required:
    - bowlerID
    - nonStrikeBatsmanId
    - strikeBatsmanId
    type: object
  requestmodels.TeamCreateModel:
    properties:
      logo:
        type: string
      name:
        type: string
      players:
        items:
          $ref: '#/definitions/requestmodels.PlayerModel'
        type: array
    required:
    - name
    type: object
  requestmodels.TeamUpdateModel:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  requestmodels.TeamsAddModel:
    properties:
      teams:
        items:
          $ref: '#/definitions/requestmodels.SeriesParticipantModel'
        type: array
    required:
    - teams
    type: object
  requestmodels.TeamsRemoveModel:
    properties:
      teams:
        items:
          type: string
        type: array
    required:
    - teams
    type: object
  requestmodels.UpdateSeriesStatusModel:
    properties:
      status:
        type: integer
    required:
    - status
    type: object
  requestmodels.UpdateSquadModel:
    properties:
      addedPlayer:
        items:
          type: string
        type: array
      removedPlayer:
        items:
          type: string
        type: array
    type: object
  responsemodels.ErrorModel:
    properties:
      errorCode:
        type: integer
      message:
        type: string
    type: object
  responsemodels.Player:
    properties:
      id:
        type: string
      name:
        type: string
      playerType:
        type: integer
      teamID:
        type: string
    type: object
  responsemodels.Series:
    properties:
      id:
        type: string
      name:
        type: string
      status:
        type: integer
      teams:
        items:
          $ref: '#/definitions/responsemodels.Team'
        type: array
      type:
        type: integer
    type: object
  responsemodels.Team:
    properties:
      id:
        type: string
      logo:
        type: string
      name:
        type: string
      players:
        items:
          $ref: '#/definitions/responsemodels.Player'
        type: array
    type: object
info:
  contact: {}
  description: This contains the commn REST api to support a modern cricket scoreboard
    project.
  license:
    name: MIT
    url: https://github.com/dashu-baba/cricket-scoreboard-api/blob/master/LICENSE
  termsOfService: https://github.com/dashu-baba/cricket-scoreboard-api
  title: Cricket Scoreboard API
  version: "1.0"
paths:
  /series:
    post:
      consumes:
      - application/json
      parameters:
      - description: Create Series
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/requestmodels.SeriesCreateModel'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responsemodels.Series'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responsemodels.ErrorModel'
      summary: Create a series item
      tags:
      - Game
  /series/:id:
    get:
      consumes:
      - application/json
      parameters:
      - description: Series ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responsemodels.Team'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responsemodels.ErrorModel'
      summary: Get singe item of series
      tags:
      - Game
    patch:
      consumes:
      - application/json
      parameters:
      - description: Update Series Status Model
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/requestmodels.UpdateSeriesStatusModel'
      - description: Series ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204": {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responsemodels.ErrorModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responsemodels.ErrorModel'
      summary: Update series status
      tags:
      - Game
  /series/:id/matches:
    post:
      consumes:
      - application/json
      parameters:
      - description: Create Matches
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/requestmodels.MatchCreateModel'
      - description: Series ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204": {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responsemodels.ErrorModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responsemodels.ErrorModel'
      summary: Create list of matches under a series
      tags:
      - Game
  /series/:id/matches/:matchid:
    patch:
      consumes:
      - application/json
      parameters:
      - description: Update Match Status Model
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/requestmodels.UpdateSeriesStatusModel'
      - description: Series ID
        in: path
        name: id
        required: true
        type: string
      - description: Match ID
        in: path
        name: matchid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204": {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responsemodels.ErrorModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responsemodels.ErrorModel'
      summary: Update match status
      tags:
      - Game
    put:
      consumes:
      - application/json
      parameters:
      - description: Match Playing Squad
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/requestmodels.MatchPlayingSquadModel'
      - description: Series ID
        in: path
        name: id
        required: true
        type: string
      - description: Match ID
        in: path
        name: matchid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204": {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responsemodels.ErrorModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responsemodels.ErrorModel'
      summary: Update starting players of the match
      tags:
      - Game
  /series/:id/matches/:matchid/innings:
    post:
      consumes:
      - application/json
      parameters:
      - description: Create Innings Model
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/requestmodels.CreateInningsModel'
      - description: Series ID
        in: path
        name: id
        required: true
        type: string
      - description: Match ID
        in: path
        name: matchid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responsemodels.ErrorModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responsemodels.ErrorModel'
      summary: Created an innings
      tags:
      - Game
  /series/:id/matches/:matchid/innings/:inningsid/start:
    put:
      consumes:
      - application/json
      parameters:
      - description: Start Innings Model
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/requestmodels.StartInningsModel'
      - description: Series ID
        in: path
        name: id
        required: true
        type: string
      - description: Match ID
        in: path
        name: matchid
        required: true
        type: string
      - description: Innings ID
        in: path
        name: inningsid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204": {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responsemodels.ErrorModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responsemodels.ErrorModel'
      summary: Created an innings
      tags:
      - Game
  /series/:id/teams:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Remove Teams
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/requestmodels.TeamsRemoveModel'
      - description: Series ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204": {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responsemodels.ErrorModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responsemodels.ErrorModel'
      summary: Remove list of teams to the series item
      tags:
      - Game
    post:
      consumes:
      - application/json
      parameters:
      - description: Add Teams
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/requestmodels.TeamsAddModel'
      - description: Series ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responsemodels.Series'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responsemodels.ErrorModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responsemodels.ErrorModel'
      summary: Add list of teams to the series item
      tags:
      - Game
  /series/:id/teams/:teamid:
    put:
      consumes:
      - application/json
      parameters:
      - description: Update Squad model
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/requestmodels.UpdateSquadModel'
      - description: Series ID
        in: path
        name: id
        required: true
        type: string
      - description: Team ID
        in: path
        name: teamid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204": {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responsemodels.ErrorModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responsemodels.ErrorModel'
      summary: Update
      tags:
      - Game
  /teams:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responsemodels.Team'
            type: array
      summary: Get list of teams
      tags:
      - Teams
    post:
      consumes:
      - application/json
      parameters:
      - description: Create Team
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/requestmodels.TeamCreateModel'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responsemodels.Team'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responsemodels.ErrorModel'
      summary: Create a team item
      tags:
      - Teams
  /teams/:id:
    get:
      consumes:
      - application/json
      parameters:
      - description: Team ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responsemodels.Team'
      summary: Get singe item of team
      tags:
      - Teams
    put:
      consumes:
      - application/json
      parameters:
      - description: Update Team
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/requestmodels.TeamUpdateModel'
      - description: Team ID
        in: path
        name: string
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204": {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responsemodels.ErrorModel'
      summary: Update a team item
      tags:
      - Teams
  /teams/:id/players:
    post:
      consumes:
      - application/json
      parameters:
      - description: Add Team
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/requestmodels.PlayerCreateModel'
      - description: Team ID
        in: path
        name: string
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responsemodels.Player'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responsemodels.ErrorModel'
      summary: Add a player to the team item
      tags:
      - Teams
  /teams/:id/players/:playerid:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Team ID
        in: path
        name: id
        required: true
        type: string
      - description: Player ID
        in: path
        name: playerid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204": {}
      summary: Remove a player from the team item
      tags:
      - Teams
    put:
      consumes:
      - application/json
      parameters:
      - description: Update Team
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/requestmodels.PlayerUpdateModel'
      - description: Team ID
        in: path
        name: id
        required: true
        type: string
      - description: Player ID
        in: path
        name: playerid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204": {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responsemodels.ErrorModel'
      summary: Update a player item
      tags:
      - Teams
swagger: "2.0"
